// components/_alert.scss
@use "../settings" as *;
@use "../tools" as *;

.c-alert {
    display: flex;
    align-items: flex-start;
    padding: var(--spacing-md);
    border-radius: var(--site-radius);
    gap: var(--spacing-sm);
    @include transition(
        background-color,
        border-color,
        color,
        transform,
        box-shadow
    );

    // Base variations
    &--primary {
        background: var(--color-button-primary);
        color: var(--color-button-primary-text);
    }

    &--secondary {
        background: var(--color-button-secondary);
        color: var(--color-button-secondary-text);
    }

    // Status variations
    &--error {
        background: var(--color-status-error-bg);
        color: var(--color-status-error);
    }

    &--success {
        background: var(--color-status-success-bg);
        color: var(--color-status-success);
    }

    &--warning {
        background: var(--color-status-warning-bg);
        color: var(--color-status-warning);
    }

    &--info {
        background: var(--color-status-info-bg);
        color: var(--color-status-info);
    }

    // Alert icon
    &__icon {
        flex-shrink: 0;
        width: 20px;
        height: 20px;

        svg {
            width: 100%;
            height: 100%;
            fill: currentColor;
        }
    }

    // Alert content
    &__content {
        flex: 1;
        min-width: 0;
    }

    &__title {
        font-weight: var(--font-weight-medium);
        margin-bottom: var(--spacing-xs);
    }

    &__text {
        color: inherit;
        opacity: 0.9;
    }

    // Dismissible variation
    &--dismissible {
        padding-right: var(--spacing-xl);
        position: relative;
    }

    &__close {
        position: absolute;
        top: var(--spacing-sm);
        right: var(--spacing-sm);
        padding: var(--spacing-xs);
        color: currentColor;
        opacity: 0.5;
        cursor: pointer;
        border: none;
        background: none;
        border-radius: var(--site-radius-sm);
        @include transition(opacity, background-color);

        &:hover {
            opacity: 1;
            background-color: rgba(0, 0, 0, 0.1);
        }

        svg {
            width: 16px;
            height: 16px;
            stroke: currentColor;
        }
    }

    // Border variations
    &--bordered {
        border: 1px solid currentColor;
        background: transparent;
    }

    // Size variations
    &--sm {
        padding: var(--spacing-sm);
        font-size: var(--font-size-sm);

        .c-alert__icon {
            width: 16px;
            height: 16px;
        }
    }

    &--lg {
        padding: var(--spacing-lg);
        font-size: var(--font-size-lg);

        .c-alert__icon {
            width: 24px;
            height: 24px;
        }
    }

    // Animation variations
    &--animate {
        animation: alert-slide-in 0.3s ease-out;
    }

    &.is-dismissing {
        animation: alert-slide-out 0.3s ease-out forwards;
    }
}

// Animations
@keyframes alert-slide-in {
    from {
        opacity: 0;
        transform: translateY(-1rem);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}

@keyframes alert-slide-out {
    from {
        opacity: 1;
        transform: translateY(0);
    }
    to {
        opacity: 0;
        transform: translateY(-1rem);
    }
}

// Alert container for stacked alerts
.c-alert-container {
    position: fixed;
    top: var(--spacing-lg);
    right: var(--spacing-lg);
    z-index: var(--z-tooltip);
    display: flex;
    flex-direction: column;
    gap: var(--spacing-sm);
    max-width: 400px;
    width: calc(100% - var(--spacing-lg) * 2);

    .c-alert {
        box-shadow: var(--site-shadow);
    }

    // Position variations
    &--top-left {
        top: var(--spacing-lg);
        left: var(--spacing-lg);
        right: auto;
    }

    &--bottom-right {
        top: auto;
        bottom: var(--spacing-lg);
        right: var(--spacing-lg);
    }

    &--bottom-left {
        top: auto;
        bottom: var(--spacing-lg);
        left: var(--spacing-lg);
        right: auto;
    }

    &--center {
        top: var(--spacing-lg);
        left: 50%;
        right: auto;
        transform: translateX(-50%);
    }
}
